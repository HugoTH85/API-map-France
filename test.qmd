---
title: Test
execute:
    echo: false
---

```{ojs}

d3 = require("d3@6")
viewof zoomer = html`<input type=range min=1600 max=10000 step=any>`

map = {
  const width = 900, height = 900; 
  const path = d3.geoPath();

  const projection = d3.geoConicConformal() // projection Lambert-93
    .center([2.454071, 46.279229]) // On centre sur la France
    .translate([width /2 , height / 2])
    .scale(zoomer) //on zoome; 

  path.projection(projection);
  
  /* on crée l'objet svg */
  const svg = d3.create('svg')
    .style('max-width', '100%')
    .attr("id", "svg")  
    .attr('viewBox', [0, 0, width, height])
    .attr("width", width)
    .attr("height", height)
    .attr("fill", "#d3dfde")
    .attr("class", "Blues");

  const deps = svg.append("g");
  /* un fichier au format geojson a été attaché à ce notebook
  on en trouve içi : https://france-geojson.gregoiredavid.fr/
  ou là : https://unpkg.com/world-atlas@1.1.4/world/110m.json
  mais on doit pouvoir en faire avec QGIS
  */
  const geojson = FileAttachment('departments.json').json();
  
  /* on crée une zone + une fonction d'update pour afficher la mention département/région à la volée
  */
  var div = svg.append("text")                
    .attr('transform', 'translate(10, 20)')
    .attr("class", "tooltip")
  
  function update(d) {
    svg.selectAll(".tooltip")
      .attr("x", 0)
      .attr("y", 0)
      .style("fill", "green")
      .text(d.properties.NOM_DEPT)
    svg.selectAll(".tooltip").append("tspan")
       .attr("x", 0)
       .attr("y", 15)
       .style("fill", "black")
       .text("Région : " + d.properties.NOM_REGION)
  }
 
 /* on crée la map
 */
 geojson.then(function(geojson) {
    deps.selectAll("path")
        .data(geojson.features)
        .enter()
        .append("path")
        .style("stroke", "white")
        .on("mouseover", function(d) {update(d.srcElement.__data__)})
        .attr("d", path)
  });   
  return svg.node();
}

FileAttachment('./Data/departments.json').json().then(function(geojson) {
    var a = [];
    geojson.features.forEach(function(d){
      a.push(d.properties.NOM_DEPT);
    });
    return a;
})
```