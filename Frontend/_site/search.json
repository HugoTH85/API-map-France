[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Home Page",
    "section": "",
    "text": "Bienvenue sur la carte de france interactive !"
  },
  {
    "objectID": "documentation.html",
    "href": "documentation.html",
    "title": "Documentaiton du projet",
    "section": "",
    "text": "Tout d’abord, vérifiez que vos ports 3000, 3310 et 5000 ne sont pas déjà utilisés. Si c’est le cas, veuillez les libérer pour le bon fonctionnement du projet. Vous pouvez voir les ports utilisés en utilisant la commande suivante dans un terminal :\nnetstat -a\nPlacez-vous dans le répertoire racine du projet et exécutez la commande suivante :\ndocker-compose up -d\nUne fois la commande exécutée, rendez-vous sur cette page\nVous arrivez sur l’interface web de notre projet. L’installation est donc terminée.\n\n\n\nLe projet se situe à l’addresse suivante Carte de France.\nUne carte se situe en haut à gauche, elle est interactive (zoom et déplacement). Il vous suffit de cliquer sur un endroit de la carte pour déplacer le bouton de sélection (en vert). Puis de modifier les filtres pour qu’ils correspondent à vos attentes et enfin cliquer sur le bouton “Rechercher” pour démarrer le requête.\nDans la partie supérieure droite de l’interface web, vous pouvez apercevoir un tableau affichant les informations relatives aux villes affichées correspondant à la recherche.\n\n\n\nNous avons choisi de séparer notre projet en 3 parties (ce qui explique les 3 conteneurs du projet):\n\nUne base de données MySQL (conteneur “db_carte_france”)\nUne API en C# (conteneur “api_carte_france”)\nUne interface web en Quarto (conteneur “front_carte_france”)\n\nCela permet d’isoler chaque service afin d’assurer une meilleure flexibilité du projet pour d’éventuelles mises à jour à l’avenir et rend le développement du projet plus simple.\n\n\n\n\n\n\nSystème de gestion de bases de données : MySQL\n\n\n\n\n\nLangage :\n\nC#\n\nPackages :\n\nMySql.Data.MySqlClient\nSystem\n\nMiddleware :\n\nCORS\n\n\n\n\n\n\nTechnologies :\n\nQuarto\nd3\n\nLangages :\n\nObservableHQ\nJavascript\nyaml\n\n\n\n\n\n\nTechnologies :\n\nDocker\n\nServices :\n\nDockerHub\n\nLangages :\n\nYaml\n\n\n\n\n\n\nNous n’avons pas changé notre architecture durant le projet, étant donné que nous y avions bien réfléchi en amont. Voyant que notre projet évoluait correctement depuis le début, nous n’avons donc pas envisagé de solutions alternatives à celles initialement prévue.\nSi nous avions eu plus de temps, nous aurions sûrement :\n\nAméliorer la sécurité de notre projet, en mettant en place par exemple un reverse-proxy afin d’éviter une connexion directe au serveur.\nMettre en place le protocole HTTPS afin de rendre notre interface web fiable aux yeux des utilisateurs.\nEtendre le projet sur la carte du Monde.\nAméliorer l’interface utilisateur (carte, filtre, esthétique).\n\n\n\n\nPour en savoir plus sur notre technologie, veuillez vous rendre sur cette page.\nPour tester notre Carte interactive de france rendez vous ici"
  },
  {
    "objectID": "documentation.html#installation-du-projet",
    "href": "documentation.html#installation-du-projet",
    "title": "Documentaiton du projet",
    "section": "",
    "text": "Tout d’abord, vérifiez que vos ports 3000, 3310 et 5000 ne sont pas déjà utilisés. Si c’est le cas, veuillez les libérer pour le bon fonctionnement du projet. Vous pouvez voir les ports utilisés en utilisant la commande suivante dans un terminal :\nnetstat -a\nPlacez-vous dans le répertoire racine du projet et exécutez la commande suivante :\ndocker-compose up -d\nUne fois la commande exécutée, rendez-vous sur cette page\nVous arrivez sur l’interface web de notre projet. L’installation est donc terminée."
  },
  {
    "objectID": "documentation.html#manipulation-de-linterface-web",
    "href": "documentation.html#manipulation-de-linterface-web",
    "title": "Documentaiton du projet",
    "section": "",
    "text": "Le projet se situe à l’addresse suivante Carte de France.\nUne carte se situe en haut à gauche, elle est interactive (zoom et déplacement). Il vous suffit de cliquer sur un endroit de la carte pour déplacer le bouton de sélection (en vert). Puis de modifier les filtres pour qu’ils correspondent à vos attentes et enfin cliquer sur le bouton “Rechercher” pour démarrer le requête.\nDans la partie supérieure droite de l’interface web, vous pouvez apercevoir un tableau affichant les informations relatives aux villes affichées correspondant à la recherche."
  },
  {
    "objectID": "documentation.html#architecture-du-projet-type-client-server",
    "href": "documentation.html#architecture-du-projet-type-client-server",
    "title": "Documentaiton du projet",
    "section": "",
    "text": "Nous avons choisi de séparer notre projet en 3 parties (ce qui explique les 3 conteneurs du projet):\n\nUne base de données MySQL (conteneur “db_carte_france”)\nUne API en C# (conteneur “api_carte_france”)\nUne interface web en Quarto (conteneur “front_carte_france”)\n\nCela permet d’isoler chaque service afin d’assurer une meilleure flexibilité du projet pour d’éventuelles mises à jour à l’avenir et rend le développement du projet plus simple."
  },
  {
    "objectID": "documentation.html#langages-technologies-et-packages-utilisés",
    "href": "documentation.html#langages-technologies-et-packages-utilisés",
    "title": "Documentaiton du projet",
    "section": "",
    "text": "Système de gestion de bases de données : MySQL\n\n\n\n\n\nLangage :\n\nC#\n\nPackages :\n\nMySql.Data.MySqlClient\nSystem\n\nMiddleware :\n\nCORS\n\n\n\n\n\n\nTechnologies :\n\nQuarto\nd3\n\nLangages :\n\nObservableHQ\nJavascript\nyaml\n\n\n\n\n\n\nTechnologies :\n\nDocker\n\nServices :\n\nDockerHub\n\nLangages :\n\nYaml"
  },
  {
    "objectID": "documentation.html#expérience",
    "href": "documentation.html#expérience",
    "title": "Documentaiton du projet",
    "section": "",
    "text": "Nous n’avons pas changé notre architecture durant le projet, étant donné que nous y avions bien réfléchi en amont. Voyant que notre projet évoluait correctement depuis le début, nous n’avons donc pas envisagé de solutions alternatives à celles initialement prévue.\nSi nous avions eu plus de temps, nous aurions sûrement :\n\nAméliorer la sécurité de notre projet, en mettant en place par exemple un reverse-proxy afin d’éviter une connexion directe au serveur.\nMettre en place le protocole HTTPS afin de rendre notre interface web fiable aux yeux des utilisateurs.\nEtendre le projet sur la carte du Monde.\nAméliorer l’interface utilisateur (carte, filtre, esthétique)."
  },
  {
    "objectID": "documentation.html#about",
    "href": "documentation.html#about",
    "title": "Documentaiton du projet",
    "section": "",
    "text": "Pour en savoir plus sur notre technologie, veuillez vous rendre sur cette page.\nPour tester notre Carte interactive de france rendez vous ici"
  },
  {
    "objectID": "api.html",
    "href": "api.html",
    "title": "API documentation",
    "section": "",
    "text": "L’Endpoint a en paramètre les coordonnées en latitude et longitude avec des filtres établis (distance maximale définissant un rayon, population minimale, nombre de villes à retourner, régions prises en compte) et renvoie la liste des villes correspondantes sous format csv (avec les informations correspondantes).\n\n\n\n\nlatitude (obligatoire) : la latitude de la position géographique.\nlongitude (obligatoire) : la longitude de la position géographique.\ndistance (obligatoire) : la distance maximale (en kilomètres) à partir des coordonnées spécifiées.\nmin_pop (obligatoire) : la population minimale que doivent avoir les villes renvoyées.\nnumber (obligatoire) : le nombre de villes à retourner (classées de la plus proche à la plus loin du point)\nregions (obligatoire, nul si non spécifié) : une liste de régions à prendre en compte pour filtrer les villes.\n\n\n\n\n\nCode 200 OK : renvoie une liste de villes au format CSV.\nCode 400 Bad Request : indique que des paramètres obligatoires sont manquants ou invalides.\nCode 404 Not Found : indique qu’aucune ville n’a été trouvée pour les paramètres spécifiés.\n\n\n\n\nhttp://localhost:5000/city?latitude=48.8566&longitude=2.3522&distance=10000&min_pop=7000&number=20&regions=Ile%20de%20France,Pays%20de%20la%20Loire\n\n\n\nVille,Région,Latitude,Longitude,Population,Distance La Ferte-Bernard,Pays de la Loire,48.1867,0.6544,8852,142.38111126997777 Coulaines,Pays de la Loire,48.0267,0.2042,7600,179.31283811803831 Le Mans,Pays de la Loire,48.0077,0.1984,143252,180.57864509968667 Allonnes,Pays de la Loire,47.9686,0.1606,11075,184.89794882730536 La Fleche,Pays de la Loire,47.6997,-0.0761,14902,213.7152204068269 Evron,Pays de la Loire,48.1556,-0.4025,7048,215.56417750224614 Sable-sur-Sarthe,Pays de la Loire,47.84,-0.3342,12127,223.27930433791778 Mayenne,Pays de la Loire,48.3031,-0.6136,12874,226.3412164638457 Saumur,Pays de la Loire,47.26,-0.0769,26599,240.42182503312054 Laval,Pays de la Loire,48.0733,-0.7689,49573,243.88268836833717 Saint-Berthevin,Pays de la Loire,48.0683,-0.8258,7348,248.0323864225783 Chateau-Gontier,Pays de la Loire,47.8286,-0.7028,11805,248.34541735409397 Trelaze,Pays de la Loire,47.4461,-0.4664,14759,251.7921051906554 Saint-Barthelemy-d Anjou,Pays de la Loire,47.4675,-0.495,9203,252.36378134375587 Angers,Pays de la Loire,47.4736,-0.5542,154508,255.70214166209706 Doue-la-Fontaine,Pays de la Loire,47.1931,-0.2756,7686,255.90217965120897 Avrille,Pays de la Loire,47.5069,-0.5889,14065,256.0950206378446 Montreuil-Juigne,Pays de la Loire,47.5283,-0.6119,7521,256.427966879092 Les Ponts-de-Ce,Pays de la Loire,47.4244,-0.5253,12811,256.618927598318 Chemille,Pays de la Loire,47.2131,-0.7258,7201,280.87540207490173"
  },
  {
    "objectID": "api.html#description",
    "href": "api.html#description",
    "title": "API documentation",
    "section": "",
    "text": "L’Endpoint a en paramètre les coordonnées en latitude et longitude avec des filtres établis (distance maximale définissant un rayon, population minimale, nombre de villes à retourner, régions prises en compte) et renvoie la liste des villes correspondantes sous format csv (avec les informations correspondantes)."
  },
  {
    "objectID": "api.html#paramètres-de-requête",
    "href": "api.html#paramètres-de-requête",
    "title": "API documentation",
    "section": "",
    "text": "latitude (obligatoire) : la latitude de la position géographique.\nlongitude (obligatoire) : la longitude de la position géographique.\ndistance (obligatoire) : la distance maximale (en kilomètres) à partir des coordonnées spécifiées.\nmin_pop (obligatoire) : la population minimale que doivent avoir les villes renvoyées.\nnumber (obligatoire) : le nombre de villes à retourner (classées de la plus proche à la plus loin du point)\nregions (obligatoire, nul si non spécifié) : une liste de régions à prendre en compte pour filtrer les villes."
  },
  {
    "objectID": "api.html#réponses",
    "href": "api.html#réponses",
    "title": "API documentation",
    "section": "",
    "text": "Code 200 OK : renvoie une liste de villes au format CSV.\nCode 400 Bad Request : indique que des paramètres obligatoires sont manquants ou invalides.\nCode 404 Not Found : indique qu’aucune ville n’a été trouvée pour les paramètres spécifiés."
  },
  {
    "objectID": "api.html#exemple-de-requête",
    "href": "api.html#exemple-de-requête",
    "title": "API documentation",
    "section": "",
    "text": "http://localhost:5000/city?latitude=48.8566&longitude=2.3522&distance=10000&min_pop=7000&number=20&regions=Ile%20de%20France,Pays%20de%20la%20Loire"
  },
  {
    "objectID": "api.html#exemple-de-réponse",
    "href": "api.html#exemple-de-réponse",
    "title": "API documentation",
    "section": "",
    "text": "Ville,Région,Latitude,Longitude,Population,Distance La Ferte-Bernard,Pays de la Loire,48.1867,0.6544,8852,142.38111126997777 Coulaines,Pays de la Loire,48.0267,0.2042,7600,179.31283811803831 Le Mans,Pays de la Loire,48.0077,0.1984,143252,180.57864509968667 Allonnes,Pays de la Loire,47.9686,0.1606,11075,184.89794882730536 La Fleche,Pays de la Loire,47.6997,-0.0761,14902,213.7152204068269 Evron,Pays de la Loire,48.1556,-0.4025,7048,215.56417750224614 Sable-sur-Sarthe,Pays de la Loire,47.84,-0.3342,12127,223.27930433791778 Mayenne,Pays de la Loire,48.3031,-0.6136,12874,226.3412164638457 Saumur,Pays de la Loire,47.26,-0.0769,26599,240.42182503312054 Laval,Pays de la Loire,48.0733,-0.7689,49573,243.88268836833717 Saint-Berthevin,Pays de la Loire,48.0683,-0.8258,7348,248.0323864225783 Chateau-Gontier,Pays de la Loire,47.8286,-0.7028,11805,248.34541735409397 Trelaze,Pays de la Loire,47.4461,-0.4664,14759,251.7921051906554 Saint-Barthelemy-d Anjou,Pays de la Loire,47.4675,-0.495,9203,252.36378134375587 Angers,Pays de la Loire,47.4736,-0.5542,154508,255.70214166209706 Doue-la-Fontaine,Pays de la Loire,47.1931,-0.2756,7686,255.90217965120897 Avrille,Pays de la Loire,47.5069,-0.5889,14065,256.0950206378446 Montreuil-Juigne,Pays de la Loire,47.5283,-0.6119,7521,256.427966879092 Les Ponts-de-Ce,Pays de la Loire,47.4244,-0.5253,12811,256.618927598318 Chemille,Pays de la Loire,47.2131,-0.7258,7201,280.87540207490173"
  }
]